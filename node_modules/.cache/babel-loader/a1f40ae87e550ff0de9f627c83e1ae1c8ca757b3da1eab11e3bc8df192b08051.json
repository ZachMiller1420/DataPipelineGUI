{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachm\\\\flask-react-frontend\\\\src\\\\PipelineSimulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PipelineSimulation = () => {\n  _s();\n  const [dataset, setDataset] = useState([]);\n  const [step, setStep] = useState(0);\n  useEffect(() => {\n    const fetchPipelineData = async () => {\n      const response = await axios.get('http://localhost:5000/get_pipeline_stage');\n      setDataset(response.data.dataset);\n      setStep(response.data.step);\n    };\n    fetchPipelineData();\n  }, [step]);\n  const processNextStage = async () => {\n    const response = await axios.post('http://localhost:5000/process_next_stage');\n    if (response.data.status === 'success') {\n      setDataset(response.data.dataset);\n      setStep(response.data.step);\n    }\n  };\n  const updateDataset = async () => {\n    await axios.post('http://localhost:5000/update_pipeline_data', dataset);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    children: [[...Array(step + 1)].map((_, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid black',\n        padding: '10px',\n        margin: '10px',\n        width: '200px',\n        height: '300px',\n        overflow: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Stage \", idx + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: dataset.map(asset => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [asset.Asset, \" - \", asset.OperationalStatus]\n        }, asset.Asset, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: processNextStage,\n        children: \"Process Next Stage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateDataset,\n        children: \"Update Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(PipelineSimulation, \"tgbc+OGDY/k/+12+Z204Jlaaha8=\");\n_c = PipelineSimulation;\nexport default PipelineSimulation;\nvar _c;\n$RefreshReg$(_c, \"PipelineSimulation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PipelineSimulation","_s","dataset","setDataset","step","setStep","fetchPipelineData","response","get","data","processNextStage","post","status","updateDataset","style","display","flexDirection","justifyContent","children","Array","map","_","idx","border","padding","margin","width","height","overflow","fileName","_jsxFileName","lineNumber","columnNumber","asset","Asset","OperationalStatus","marginLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zachm/flask-react-frontend/src/PipelineSimulation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PipelineSimulation = () => {\r\n    const [dataset, setDataset] = useState([]);\r\n    const [step, setStep] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchPipelineData = async () => {\r\n            const response = await axios.get('http://localhost:5000/get_pipeline_stage');\r\n            setDataset(response.data.dataset);\r\n            setStep(response.data.step);\r\n        };\r\n        fetchPipelineData();\r\n    }, [step]);\r\n\r\n    const processNextStage = async () => {\r\n        const response = await axios.post('http://localhost:5000/process_next_stage');\r\n        if (response.data.status === 'success') {\r\n            setDataset(response.data.dataset);\r\n            setStep(response.data.step);\r\n        }\r\n    };\r\n\r\n    const updateDataset = async () => {\r\n        await axios.post('http://localhost:5000/update_pipeline_data', dataset);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\r\n            {[...Array(step + 1)].map((_, idx) => (\r\n                <div\r\n                    key={idx}\r\n                    style={{\r\n                        border: '1px solid black',\r\n                        padding: '10px',\r\n                        margin: '10px',\r\n                        width: '200px',\r\n                        height: '300px',\r\n                        overflow: 'auto',\r\n                    }}\r\n                >\r\n                    <h4>Stage {idx + 1}</h4>\r\n                    <ul>\r\n                        {dataset.map((asset) => (\r\n                            <li key={asset.Asset}>\r\n                                {asset.Asset} - {asset.OperationalStatus}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n            <div style={{ marginLeft: '20px' }}>\r\n                <button onClick={processNextStage}>Process Next Stage</button>\r\n                <button onClick={updateDataset}>Update Dataset</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PipelineSimulation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}