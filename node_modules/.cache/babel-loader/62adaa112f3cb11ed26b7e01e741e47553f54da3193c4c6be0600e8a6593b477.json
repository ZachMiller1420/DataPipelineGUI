{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachm\\\\flask-react-frontend\\\\src\\\\components\\\\PipelineSimulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PipelineTransformation = () => {\n  _s();\n  const [pipelineData, setPipelineData] = useState([]);\n  const [transformedData, setTransformedData] = useState([]);\n  const [step, setStep] = useState(0);\n  const [isPipelineComplete, setIsPipelineComplete] = useState(false);\n  const fetchPipelineData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_pipeline_stage');\n      setPipelineData(response.data.dataset || []);\n      setStep(response.data.step);\n    } catch (err) {\n      console.error('Error fetching pipeline data:', err);\n    }\n  };\n  const processNextStage = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/process_next_stage');\n      if (response.data.status === \"complete\") {\n        setIsPipelineComplete(true);\n        alert(\"Pipeline processing complete!\");\n      } else {\n        setPipelineData(response.data.dataset);\n        setStep(response.data.step);\n      }\n    } catch (err) {\n      console.error('Error processing next stage:', err);\n    }\n  };\n  const updatePipelineData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:5000/update_pipeline_data', {\n        data: transformedData,\n        step\n      });\n      alert('Pipeline data updated successfully!');\n    } catch (err) {\n      console.error('Error updating pipeline data:', err);\n    }\n  };\n  useEffect(() => {\n    fetchPipelineData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pipeline Transformation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: processNextStage,\n      disabled: isPipelineComplete,\n      children: isPipelineComplete ? \"Pipeline Complete\" : \"Process Next Stage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Pipeline Data (Step \", step, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(pipelineData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updatePipelineData,\n      children: \"Update Pipeline Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(PipelineTransformation, \"5OOVe3tI+kHhpzUu2XE2He7MjmA=\");\n_c = PipelineTransformation;\nexport default PipelineTransformation;\nvar _c;\n$RefreshReg$(_c, \"PipelineTransformation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PipelineTransformation","_s","pipelineData","setPipelineData","transformedData","setTransformedData","step","setStep","isPipelineComplete","setIsPipelineComplete","fetchPipelineData","response","get","data","dataset","err","console","error","processNextStage","post","status","alert","updatePipelineData","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/zachm/flask-react-frontend/src/components/PipelineSimulation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PipelineTransformation = () => {\r\n    const [pipelineData, setPipelineData] = useState([]);\r\n    const [transformedData, setTransformedData] = useState([]);\r\n    const [step, setStep] = useState(0);\r\n    const [isPipelineComplete, setIsPipelineComplete] = useState(false);\r\n\r\n    const fetchPipelineData = async () => {\r\n        try {\r\n            const response = await axios.get('http://127.0.0.1:5000/get_pipeline_stage');\r\n            setPipelineData(response.data.dataset || []);\r\n            setStep(response.data.step);\r\n        } catch (err) {\r\n            console.error('Error fetching pipeline data:', err);\r\n        }\r\n    };\r\n\r\n    const processNextStage = async () => {\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:5000/process_next_stage');\r\n            if (response.data.status === \"complete\") {\r\n                setIsPipelineComplete(true);\r\n                alert(\"Pipeline processing complete!\");\r\n            } else {\r\n                setPipelineData(response.data.dataset);\r\n                setStep(response.data.step);\r\n            }\r\n        } catch (err) {\r\n            console.error('Error processing next stage:', err);\r\n        }\r\n    };\r\n\r\n    const updatePipelineData = async () => {\r\n        try {\r\n            await axios.post('http://127.0.0.1:5000/update_pipeline_data', { data: transformedData, step });\r\n            alert('Pipeline data updated successfully!');\r\n        } catch (err) {\r\n            console.error('Error updating pipeline data:', err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPipelineData();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h2>Pipeline Transformation</h2>\r\n            <button onClick={processNextStage} disabled={isPipelineComplete}>\r\n                {isPipelineComplete ? \"Pipeline Complete\" : \"Process Next Stage\"}\r\n            </button>\r\n            <div>\r\n                <h3>Pipeline Data (Step {step})</h3>\r\n                <pre>{JSON.stringify(pipelineData, null, 2)}</pre>\r\n            </div>\r\n            <button onClick={updatePipelineData}>Update Pipeline Data</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PipelineTransformation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}