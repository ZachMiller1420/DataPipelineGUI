{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachm\\\\flask-react-frontend\\\\src\\\\AssetOverview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssetOverview = () => {\n  _s();\n  const [assets, setAssets] = useState([]); // Store asset data\n  const [error, setError] = useState(null); // Track errors\n\n  useEffect(() => {\n    const fetchAssets = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/get_assets');\n        setAssets(response.data.assets); // Ensure backend returns \"assets\"\n      } catch (err) {\n        setError('Error fetching assets.');\n        console.error(err);\n      }\n    };\n    fetchAssets();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Asset Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '80%',\n        height: '400px',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [37.7749, -122.4194],\n        zoom: 4,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), assets.map((asset, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [asset.latitude, asset.longitude],\n          eventHandlers: {\n            click: () => console.log(`${asset.name}: ${asset.status}`)\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: asset.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), \"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: getStatusColor(asset.status)\n              },\n              children: asset.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Asset Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), assets.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: assets.map((asset, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [asset.name, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: getStatusColor(asset.status)\n            },\n            children: asset.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 47\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading or no assets available...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n// Helper function to get color based on status\n_s(AssetOverview, \"Qe3gTguJlQ94Fw6wBm2dZErz2IA=\");\n_c = AssetOverview;\nconst getStatusColor = status => {\n  switch (status) {\n    case 'Operational':\n      return 'green';\n    case 'Unknown':\n      return 'yellow';\n    case 'Not Operational':\n      return 'red';\n    default:\n      return 'black';\n  }\n};\nexport default AssetOverview;\nvar _c;\n$RefreshReg$(_c, \"AssetOverview\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","AssetOverview","_s","assets","setAssets","error","setError","fetchAssets","response","get","data","err","console","style","display","flexDirection","alignItems","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","color","width","height","marginBottom","center","zoom","url","attribution","map","asset","index","position","latitude","longitude","eventHandlers","click","log","name","status","getStatusColor","length","_c","$RefreshReg$"],"sources":["C:/Users/zachm/flask-react-frontend/src/AssetOverview.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst AssetOverview = () => {\r\n    const [assets, setAssets] = useState([]); // Store asset data\r\n    const [error, setError] = useState(null); // Track errors\r\n\r\n    useEffect(() => {\r\n        const fetchAssets = async () => {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/get_assets');\r\n                setAssets(response.data.assets); // Ensure backend returns \"assets\"\r\n            } catch (err) {\r\n                setError('Error fetching assets.');\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        fetchAssets();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '20px' }}>\r\n            <h2>Asset Overview</h2>\r\n\r\n            {/* Show error message if fetching fails */}\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n            {/* Asset Map */}\r\n            <div style={{ width: '80%', height: '400px', marginBottom: '20px' }}>\r\n                <MapContainer center={[37.7749, -122.4194]} zoom={4} style={{ height: '100%', width: '100%' }}>\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution=\"&copy; OpenStreetMap contributors\"\r\n                    />\r\n                    {assets.map((asset, index) => (\r\n                        <Marker\r\n                            key={index}\r\n                            position={[asset.latitude, asset.longitude]}\r\n                            eventHandlers={{\r\n                                click: () => console.log(`${asset.name}: ${asset.status}`),\r\n                            }}\r\n                        >\r\n                            <Popup>\r\n                                <b>{asset.name}</b>\r\n                                <br />\r\n                                Status: <span style={{ color: getStatusColor(asset.status) }}>{asset.status}</span>\r\n                            </Popup>\r\n                        </Marker>\r\n                    ))}\r\n                </MapContainer>\r\n            </div>\r\n\r\n            {/* Asset Status List */}\r\n            <div style={{ marginBottom: '20px' }}>\r\n                <h3>Asset Status</h3>\r\n                {assets.length > 0 ? (\r\n                    <ul>\r\n                        {assets.map((asset, index) => (\r\n                            <li key={index}>\r\n                                {asset.name}: <span style={{ color: getStatusColor(asset.status) }}>{asset.status}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>Loading or no assets available...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Helper function to get color based on status\r\nconst getStatusColor = (status) => {\r\n    switch (status) {\r\n        case 'Operational':\r\n            return 'green';\r\n        case 'Unknown':\r\n            return 'yellow';\r\n        case 'Not Operational':\r\n            return 'red';\r\n        default:\r\n            return 'black';\r\n    }\r\n};\r\n\r\nexport default AssetOverview;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}