{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachm\\\\flask-react-frontend\\\\src\\\\components\\\\MathPipeline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BoatTracker = () => {\n  _s();\n  const [boatState, setBoatState] = useState(null);\n  const [trajectory, setTrajectory] = useState(null);\n  const [timeHours, setTimeHours] = useState(1);\n\n  // Fetch the current boat state\n  useEffect(() => {\n    const fetchBoatState = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/get_boat_state');\n        setBoatState(response.data);\n      } catch (error) {\n        console.error('Error fetching boat state:', error);\n      }\n    };\n    fetchBoatState();\n  }, []);\n\n  // Calculate the trajectory\n  const calculateTrajectory = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/calculate_trajectory', {\n        time_hours: timeHours\n      });\n      setTrajectory(response.data);\n    } catch (error) {\n      console.error('Error calculating trajectory:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Boat Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time in Hours:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: timeHours,\n          onChange: e => setTimeHours(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: calculateTrajectory,\n        children: \"Calculate Trajectory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), boatState && /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [boatState.latitude, boatState.longitude],\n      zoom: 10,\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [boatState.latitude, boatState.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Boat Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), trajectory && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: [trajectory.new_latitude, trajectory.new_longitude],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Calculated Trajectory\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: [[boatState.latitude, boatState.longitude], [trajectory.new_latitude, trajectory.new_longitude]],\n          color: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(BoatTracker, \"n/E4VrCayd++9sXLZP3srt/VeUY=\");\n_c = BoatTracker;\nexport default BoatTracker;\nvar _c;\n$RefreshReg$(_c, \"BoatTracker\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","Marker","Popup","Polyline","jsxDEV","_jsxDEV","Fragment","_Fragment","BoatTracker","_s","boatState","setBoatState","trajectory","setTrajectory","timeHours","setTimeHours","fetchBoatState","response","get","data","error","console","calculateTrajectory","post","time_hours","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","center","latitude","longitude","zoom","style","height","width","url","attribution","position","new_latitude","new_longitude","positions","color","_c","$RefreshReg$"],"sources":["C:/Users/zachm/flask-react-frontend/src/components/MathPipeline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\nconst BoatTracker = () => {\r\n    const [boatState, setBoatState] = useState(null);\r\n    const [trajectory, setTrajectory] = useState(null);\r\n    const [timeHours, setTimeHours] = useState(1);\r\n\r\n    // Fetch the current boat state\r\n    useEffect(() => {\r\n        const fetchBoatState = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/get_boat_state');\r\n                setBoatState(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching boat state:', error);\r\n            }\r\n        };\r\n        fetchBoatState();\r\n    }, []);\r\n\r\n    // Calculate the trajectory\r\n    const calculateTrajectory = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/calculate_trajectory', {\r\n                time_hours: timeHours,\r\n            });\r\n            setTrajectory(response.data);\r\n        } catch (error) {\r\n            console.error('Error calculating trajectory:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Boat Tracker</h2>\r\n            <div>\r\n                <label>\r\n                    Time in Hours:\r\n                    <input\r\n                        type=\"number\"\r\n                        value={timeHours}\r\n                        onChange={(e) => setTimeHours(e.target.value)}\r\n                    />\r\n                </label>\r\n                <button onClick={calculateTrajectory}>Calculate Trajectory</button>\r\n            </div>\r\n            {boatState && (\r\n                <MapContainer\r\n                    center={[boatState.latitude, boatState.longitude]}\r\n                    zoom={10}\r\n                    style={{ height: '500px', width: '100%' }}\r\n                >\r\n                    <TileLayer\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        attribution=\"&copy; OpenStreetMap contributors\"\r\n                    />\r\n                    <Marker position={[boatState.latitude, boatState.longitude]}>\r\n                        <Popup>Boat Current Location</Popup>\r\n                    </Marker>\r\n                    {trajectory && (\r\n                        <>\r\n                            <Marker position={[trajectory.new_latitude, trajectory.new_longitude]}>\r\n                                <Popup>Calculated Trajectory</Popup>\r\n                            </Marker>\r\n                            <Polyline\r\n                                positions={[\r\n                                    [boatState.latitude, boatState.longitude],\r\n                                    [trajectory.new_latitude, trajectory.new_longitude],\r\n                                ]}\r\n                                color=\"blue\"\r\n                            />\r\n                        </>\r\n                    )}\r\n                </MapContainer>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BoatTracker;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}