{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachm\\\\flask-react-frontend\\\\src\\\\PipelineSimulation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PipelineTransformation = () => {\n  _s();\n  const [pipelineData, setPipelineData] = useState([]);\n  const [transformedData, setTransformedData] = useState([]);\n  const [step, setStep] = useState(0);\n\n  // Fetch current pipeline data from the backend\n  const fetchPipelineData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:5000/get_pipeline_stage');\n      setPipelineData(response.data.dataset || []);\n      setStep(response.data.step);\n    } catch (err) {\n      console.error('Error fetching pipeline data:', err);\n    }\n  };\n\n  // Apply the next transformation to the data\n  const processNextStage = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/process_next_stage');\n      setPipelineData(response.data.dataset);\n      setStep(response.data.step);\n    } catch (err) {\n      console.error('Error processing next stage:', err);\n    }\n  };\n\n  // Allow user to update pipeline data directly\n  const updatePipelineData = async () => {\n    try {\n      await axios.post('http://127.0.0.1:5000/update_pipeline_data', {\n        data: transformedData\n      });\n      alert('Pipeline data updated successfully!');\n    } catch (err) {\n      console.error('Error updating pipeline data:', err);\n    }\n  };\n  useEffect(() => {\n    fetchPipelineData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pipeline Transformation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: processNextStage,\n      children: \"Process Next Stage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Pipeline Data (Step \", step, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(pipelineData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transformed Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(transformedData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updatePipelineData,\n      children: \"Update Pipeline Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(PipelineTransformation, \"oJKdpjouJ4sgBZnFCNrIfuXtsAY=\");\n_c = PipelineTransformation;\nexport default PipelineTransformation;\nvar _c;\n$RefreshReg$(_c, \"PipelineTransformation\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PipelineTransformation","_s","pipelineData","setPipelineData","transformedData","setTransformedData","step","setStep","fetchPipelineData","response","get","data","dataset","err","console","error","processNextStage","post","updatePipelineData","alert","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/zachm/flask-react-frontend/src/PipelineSimulation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PipelineTransformation = () => {\r\n    const [pipelineData, setPipelineData] = useState([]);\r\n    const [transformedData, setTransformedData] = useState([]);\r\n    const [step, setStep] = useState(0);\r\n\r\n    // Fetch current pipeline data from the backend\r\n    const fetchPipelineData = async () => {\r\n        try {\r\n            const response = await axios.get('http://127.0.0.1:5000/get_pipeline_stage');\r\n            setPipelineData(response.data.dataset || []);\r\n            setStep(response.data.step);\r\n        } catch (err) {\r\n            console.error('Error fetching pipeline data:', err);\r\n        }\r\n    };\r\n\r\n    // Apply the next transformation to the data\r\n    const processNextStage = async () => {\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:5000/process_next_stage');\r\n            setPipelineData(response.data.dataset);\r\n            setStep(response.data.step);\r\n        } catch (err) {\r\n            console.error('Error processing next stage:', err);\r\n        }\r\n    };\r\n\r\n    // Allow user to update pipeline data directly\r\n    const updatePipelineData = async () => {\r\n        try {\r\n            await axios.post('http://127.0.0.1:5000/update_pipeline_data', { data: transformedData });\r\n            alert('Pipeline data updated successfully!');\r\n        } catch (err) {\r\n            console.error('Error updating pipeline data:', err);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPipelineData();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <h2>Pipeline Transformation</h2>\r\n            <button onClick={processNextStage}>Process Next Stage</button>\r\n            <div>\r\n                <h3>Pipeline Data (Step {step})</h3>\r\n                <pre>{JSON.stringify(pipelineData, null, 2)}</pre>\r\n            </div>\r\n            <div>\r\n                <h3>Transformed Data</h3>\r\n                <pre>{JSON.stringify(transformedData, null, 2)}</pre>\r\n            </div>\r\n            <button onClick={updatePipelineData}>Update Pipeline Data</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PipelineTransformation;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}